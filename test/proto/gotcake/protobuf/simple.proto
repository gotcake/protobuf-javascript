/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 Aaron Cake
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import "../proto/gotcake/protobuf/javascript_options.proto";

package gotcake.protobuf;

option (javascript).namespace = "gotcake";


message Simple {

    option (js_file_options).decode_support = true;
    option (js_file_options).encode_support = true;

    required int32 num = 1;
    optional fixed32 fixed = 2 [(js_field_options).exclude=true];
    optional int64 large_num = 3 [(js_field_options).int64_as_string=true];

}

message Foo {
    option (js_message_options).decode_support = true;
    message Bar {
        // option (javascript_options).decode_support = true; // inherited
        optional string baz = 1;
        repeated float rating = 2;
        repeated int32 packed = 3 [packed=true];
    }
    required Bar foobar = 1;
    optional bytes thingy = 2;
}

enum MyEnum {
    ONE = 1;
    TWO = 2;
    THREE = 3;
}